name: Verification

on:
  push:
    branches: [ master ]
    paths:
      - '**/*.py'
  pull_request:
    branches: [ master ]
    paths:
      - '**/*.py'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  linting:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8']

    runs-on: ${{ matrix.os }}

    steps:
      #----------------------------------------------
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      #----------------------------------------------
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ matrix.os }}-pip-${{ matrix.python-version }}
      #----------------------------------------------
      - name: Install ruff
        run: python -m pip install ruff

      - name: Check python code
        run: ruff check --no-fix .

      - name: Check formatting style
        run: ruff format --diff .
      #----------------------------------------------


  tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      #----------------------------------------------
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      #----------------------------------------------
      - name: cache venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ matrix.os }}-venv-${{ matrix.python-version }}
      #----------------------------------------------
      - name: cache poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: ${{ matrix.os }}-poetry-${{ matrix.python-version }}
      #----------------------------------------------
      - name: cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ matrix.os }}-pip-${{ matrix.python-version }}
      #----------------------------------------------
      - name: cache ruff
        uses: actions/cache@v4
        with:
          path: ~/.cache/ruff
          key: ${{ matrix.os }}-ruff-${{ matrix.python-version }}
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction
      #----------------------------------------------
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest --cov=flashcard_generator --cov-append --cov-fail-under=80 --cov-branch --cov-report=json --cov-report=term
      #----------------------------------------------
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}